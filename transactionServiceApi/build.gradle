plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

group = 'com.geopokrovskiy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	//JWT
	implementation "io.jsonwebtoken:jjwt:$jsonWebTokenVersion"
	implementation "javax.xml.bind:jaxb-api:$jaxbApiVersion"

 	//DATABASE
	implementation "org.postgresql:postgresql:$postgreSqlVersion"
	implementation "org.flywaydb:flyway-core:$flywayDbVersion"

	//LOMBOK
	implementation "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok"

	//TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

	//TEST CONTAINERS
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation "org.testcontainers:postgresql:$testContainersPostgresVersion"


	//MAPSTRUCT
	implementation "org.mapstruct:mapstruct:$mapStructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

	//COMMON
	implementation files("$commonPath")
}

tasks.named('test') {
	useJUnitPlatform()
}
